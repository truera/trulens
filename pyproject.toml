[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core",
]

[tool.poetry]
name = "trulens"
version = "1.1.0"
description = "Library to systematically track and evaluate LLM based applications."
authors = [
  "Snowflake Inc. <ml-observability-wg-dl@snowflake.com>",
]
license = "MIT"
readme = "README.md"
packages = [
  { from = "_trulens", include = "trulens" },
]
homepage = "https://trulens.org/"
documentation = "https://trulens.org/getting_started/"
repository = "https://github.com/truera/trulens"
classifiers = [
  "Programming Language :: Python :: 3",
  "Operating System :: OS Independent",
  "Development Status :: 3 - Alpha",
  "License :: OSI Approved :: MIT License",
]

[tool.poetry.dependencies]
python = "^3.9,!=3.9.7"
trulens-core = { version = "^1.0.0", extras = [
  "otel",
  "tqdm",
  "openai",
] }
trulens-feedback = { version = "^1.0.0" }
trulens-dashboard = { version = "^1.0.0" }
# Remove after deprecation period:
trulens_eval = { version = "^1.0.0" }

[tool.poetry.group.benchmark.dependencies]
trulens-benchmark = { path = "src/benchmark", develop = true }

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.7"
ruff = ">=0.5"
mypy = "^1.11"
build = "^1.2"
twine = "^5.1"
codespell = "^2.3"

[tool.poetry.group.docs.dependencies]
mkdocs = ">=1.6"
mkdocstrings-python = "^1.10"
mkdocstrings = ">=0.26.1"
mkdocs-material = "^9.5"
mkdocs-material-extensions = "^1.3"
mkdocs-autorefs = "^1.0"
mkdocs-redirects = "^1.2"
mkdocs-jupyter = ">=0.24"
mkdocs-include-markdown-plugin = "^6.2"
python-markdown-math = ">=0.8"
markdown-include = ">=0.8"
notebook = "^7.2"
black = "^24.4"
mkdocs-gen-files = ">=0.5"
mkdocs-literate-nav = ">=0.6"
mkdocs-section-index = ">=0.3"

[tool.poetry.group.apps.dependencies]
trulens-apps-langchain = { path = "src/apps/langchain", develop = true, python = "<3.13" }
trulens-apps-llamaindex = { path = "src/apps/llamaindex", develop = true }
trulens-apps-nemo = { path = "src/apps/nemo", develop = true, python = "<3.12" }

[tool.poetry.group.providers.dependencies]
trulens-providers-bedrock = { path = "src/providers/bedrock", develop = true }
trulens-providers-langchain = { path = "src/providers/langchain", develop = true }
trulens-providers-cortex = { path = "src/providers/cortex", develop = true, python = "<3.12" }
trulens-providers-huggingface = { path = "src/providers/huggingface", develop = true }
trulens-providers-openai = { path = "src/providers/openai", develop = true }
trulens-providers-litellm = { path = "src/providers/litellm", develop = true }

[tool.poetry.group.connectors.dependencies]
trulens-connectors-snowflake = { path = "src/connectors/snowflake", develop = true, python = "<3.12" }

[tool.poetry.group.required.dependencies]
trulens-core = { path = "src/core", develop = true }
trulens-feedback = { path = "src/feedback", develop = true }
trulens-dashboard = { path = "src/dashboard", develop = true, python = "!=3.9.7" }
# Remove after deprecation period.
trulens_eval = { path = "src/trulens_eval", develop = true, python = "!=3.9.7" }

[tool.ruff]
line-length = 80
extend-exclude = [
  "examples/expositional",
]

[tool.ruff.format]
preview = true

[tool.ruff.lint]
preview = true
ignore = [
  "E731",
]
extend-select = [
  "I",
  "E303",
]

[tool.ruff.lint.isort]
force-single-line = true
force-sort-within-sections = true
single-line-exclusions = [
  "typing",
]
known-first-party = [
  "src",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pytest.ini_options]
testpaths = [
  "tests",
]

[tool.mypy]
files = [
  "src",
  "tests",
]
mypy_path = "src"
namespace_packages = true
explicit_package_bases = true
